# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2014 Daniel Kastl, Frédéric Junod
# This file is distributed under the same license as the Workshop - FOSS4G routing with pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Workshop - FOSS4G routing with pgRouting 2014\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-10 09:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../chapters/topology.rst:13
# 4251264c3267476aa90d127f838a2f11
msgid "Create a Network Topology"
msgstr ""

#: ../../chapters/topology.rst:15
# 52aa335baaf145eb942117c39b0e54b9
msgid ":doc:`osm2pgrouting <osm2pgrouting>` is a convenient tool, but it's also a *black box*. There are several cases where :doc:`osm2pgrouting <osm2pgrouting>` can't be used. Obviously if the data isn't OpenStreetMap data. Some network data already comes with a network topology that can be used with pgRouting out-of-the-box. Often network data is stored in Shape file format (``.shp``) and we can use PostGIS' ``shape2postgresql`` converter to import the data into a PostgreSQL database. But what to do then?"
msgstr ""

#: ../../chapters/topology.rst:21
# 975ad174f9a14c2aadd2248fd4a2877e
msgid "In this chapter you will learn how to create a network topology from scratch. For that we will start with data that contains the minimum attributes needed for routing and show how to proceed step-by-step to build routable data for pgRouting."
msgstr ""

#: ../../chapters/topology.rst:25
# dc6f487ad54f4b80a20c46ad0d245e9f
msgid "Load network data"
msgstr ""

#: ../../chapters/topology.rst:27
# 89a70fec587249e89cb79afc904487e9
msgid "At first we will load a database dump from the workshop ``data`` directory. This directory contains a compressed file with database dumps as well as a small size network data. If you haven't uncompressed the data yet, extract the file by"
msgstr ""

#: ../../chapters/topology.rst:34
# e7a639afef434c0b8f7332aa5ddbd1c4
msgid "The following command will import the database dump. It will add PostGIS and pgRouting functions to a database, in the same way as decribed in the previous chapter. It will also load the sample data with a minimum number of attributes, which you will usually find in any network data:"
msgstr ""

#: ../../chapters/topology.rst:44
# ed424f5e0c4841e6b10705f772f15c2f
msgid "Let's see wich tables have been created:"
msgstr ""

#: ../../chapters/topology.rst:47
# 9ec74d38474e4fe88f1fcdee640269f6
msgid "Run: ``psql -U user -d pgrouting-workshop -c \"\\d\"``"
msgstr ""

#: ../../chapters/topology.rst:62
# 88d9809da2b44cd2813fd9081da9297f
msgid "The table containing the road network data has the name ``ways``. It consists of the following attributes:"
msgstr ""

#: ../../chapters/topology.rst:65
# 2e8fb1d7bc7c48919d324f5850b6ad93
msgid "Run: ``psql -U user -d pgrouting-workshop -c \"\\d ways\"``"
msgstr ""

#: ../../chapters/topology.rst:82
# 70841bd9f53e46f8b5cc756a334fafdd
msgid "It is common that road network data provides at least the following information:"
msgstr ""

#: ../../chapters/topology.rst:84
# dfce38efadbb475e9b4a4c5c6fbaa8e3
msgid "Road link ID (gid)"
msgstr ""

#: ../../chapters/topology.rst:85
# ac7ff01bd23c4dc4a5497aa1989f0101
msgid "Road class (class_id)"
msgstr ""

#: ../../chapters/topology.rst:86
# f69b9ff3d00d408cb9b7c80094000b25
msgid "Road link length (length)"
msgstr ""

#: ../../chapters/topology.rst:87
# d7ce9addaadb4078bfde93ba4c11f621
msgid "Road name (name)"
msgstr ""

#: ../../chapters/topology.rst:88
# 1f7b036fc5194c588db4e27605a8c8ca
msgid "Road geometry (the_geom)"
msgstr ""

#: ../../chapters/topology.rst:90
# 7dc96ff19e594206a5c8065907d0b9e9
msgid "This allows to display the road network as a PostGIS layer in GIS software, for example in QGIS. Though it is not sufficient for routing, because it doesn't contain network topology information."
msgstr ""

#: ../../chapters/topology.rst:92
# 90f3a66a5dc541fbb9fa37d559f4c014
msgid "For the next steps we need to start the PostgreSQL command line tool"
msgstr ""

#: ../../chapters/topology.rst:98
# bc1b5aa6f0f74b59b59fe3a2d97f4e52
msgid "... or use PgAdmin III."
msgstr ""

#: ../../chapters/topology.rst:102
# be8960ec4d5144f580af9f82669b7b97
msgid "Calculate topology"
msgstr ""

#: ../../chapters/topology.rst:104
# aa39571f792c4be7985dfa0ffc904c01
msgid "Having your data imported into a PostgreSQL database usually requires one more step for pgRouting. You have to make sure that your data provides a correct network topology, which consists of information about source and target ID of each road link."
msgstr ""

#: ../../chapters/topology.rst:106
# f0b15897613c4e98839349fb95b49900
msgid "If your network data doesn't have such network topology information already you need to run the ``pgr_createTopology`` function. This function assigns a ``source`` and a ``target`` ID to each link and it can \"snap\" nearby vertices within a certain tolerance."
msgstr ""

#: ../../chapters/topology.rst:112
# f0615c7d5f6b4c94a7ea0161179fc24a
msgid "First we have to add source and target column, then we run the ``pgr_createTopology`` function ... and wait. Depending on the network size this process may take from minutes to hours. It will also require enough memory (RAM or SWAP partition) to store temporary data."
msgstr ""

#: ../../chapters/topology.rst:125
# 41a550d6982549b3ba1f8a7283e22734
msgid "Execute ``psql -U user -d pgrouting-workshop`` in your terminal to connect to the database and start the PostgreSQL shell. Leave the shell with ``\\q`` command."
msgstr ""

#: ../../chapters/topology.rst:129
# 80228eba3c574766b6e72af6060d0d3f
msgid "The dimension of the tolerance parameter depends on your data projection. Usually it's either \"degrees\" or \"meters\"."
msgstr ""

#: ../../chapters/topology.rst:133
# b1721133a69b4699bd87a51aae9f8213
msgid "Add indices"
msgstr ""

#: ../../chapters/topology.rst:135
# a68e5aa681d443ae9eff5040569ee460
msgid "Make sure that your network table has an index for ``source`` and ``target`` columns."
msgstr ""

#: ../../chapters/topology.rst:142
# 82814e05164048f8a869ecd6e60568b8
msgid "After these steps our routing database looks like this:"
msgstr ""

#: ../../chapters/topology.rst:145
# 0e799eaca6ba4237b6deadde5ad99aa8
msgid "Run: ``\\d``"
msgstr ""

#: ../../chapters/topology.rst:161
# 30b4800c712b4e099437b371cf728ebe
msgid "``geography_columns`` should contain a record for each table with \"geometry\" attribute and its SRID."
msgstr ""

#: ../../chapters/topology.rst:162
# bee3711932984b12a654a8a82ae7a14a
msgid "``ways_vertices_pgr`` contains a list of all network nodes."
msgstr ""

#: ../../chapters/topology.rst:166
# c6c5acbdebd243d78d171effe9be2927
msgid "Run: ``\\d ways``"
msgstr ""

#: ../../chapters/topology.rst:186
# 0ec00d1268dd408fb437d99cb7b13704
msgid "``source`` and ``target`` columns are now updated with node IDs."
msgstr ""

#: ../../chapters/topology.rst:187
# 3e85b7721fb74171b87d09c7aa50d4d0
msgid "``name`` may contain the street name or be empty."
msgstr ""

#: ../../chapters/topology.rst:188
# 6cab69e508204bc99f8712c52900886b
msgid "``length`` is the road link length in kilometers."
msgstr ""

#: ../../chapters/topology.rst:190
# bff6408f2d594e5d97f70d8021deb9f0
msgid "Now we are ready for our first routing query with :doc:`Dijkstra algorithm <shortest_path>`!"
msgstr ""

