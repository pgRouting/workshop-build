# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2014 Daniel Kastl, Frédéric Junod
# This file is distributed under the same license as the Workshop - FOSS4G routing with pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Workshop - FOSS4G routing with pgRouting 2014\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-10 09:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../chapters/wrapper.rst:13
# 289a2edc3e034412974df5c8e04a95a8
msgid "Writing a pl/pgsql Wrapper"
msgstr ""

#: ../../chapters/wrapper.rst:15
# c7e909e59e464358a47b71691c0403de
msgid "Many pgRouting functions provide a \"low-level\" interface to algorithms and for example return ordered ID's rather than routes with geometries. \"Wrapper functions\" therefor offer different input parameters as well as transform the returned result into a format, that can be easier read or consumed by applications."
msgstr ""

#: ../../chapters/wrapper.rst:17
# 2dc3184c88f74453a7ff15e88f66516a
msgid "The downside of wrapper functions is, that they often make assumptions that make them only useful for specific use cases or network data. Therefor pgRouting has decided to only support low-level functions and let the user write their own wrapper functions for their own use cases."
msgstr ""

#: ../../chapters/wrapper.rst:19
# 88febfd404e34b3589ddda089bc8a698
msgid "The following wrappers are examples for common transformations:"
msgstr ""

#: ../../chapters/wrapper.rst:23
# 470f8d55b6d143fe8ca3b2ea2f12fbce
msgid "Return route with network geometry"
msgstr ""

#: ../../chapters/wrapper.rst:25
# 8f184b8b2c924277b48d3ea2dad56dc1
msgid "To return a route with the line geometry of it's path segments it's not necessary to write a wrapper function. It's sufficient to link the result pack to the original road network table:"
msgstr ""

#: ../../chapters/wrapper.rst:28
# 6c795a68042d4b129ccccdc27068397a
msgid "Shortest Path Dijkstra"
msgstr ""

#: ../../chapters/wrapper.rst:41
# 318f164755e1485ea274f0b8cf9855ed
msgid "Result with Geometries"
msgstr ""

#: ../../chapters/wrapper.rst:54
# e5dd0457bab94de7a8e636062c60ffd8
msgid "The last record of this JOIN doesn't contain a geometry value since the shortest path function returns ``-1`` for the last record to indicate the end of the route."
msgstr ""

#: ../../chapters/wrapper.rst:58
# 5c53955351644b50b249b8ebec4aeb18
msgid "Visualize the result"
msgstr ""

#: ../../chapters/wrapper.rst:60
# a43957e18b7844c98bb385cd1beab7a1
msgid "Instead of looking at rows, columns and numbers on the terminal screen it's more interesting to visualize the route on a map. Here a few ways to do so:"
msgstr ""

#: ../../chapters/wrapper.rst:62
# 65fac7f9fa434316b363d7d71108d56e
msgid "**Store the result as table** with ``CREATE TABLE <table name> AS SELECT ...`` and show the result in QGIS, for example:"
msgstr ""

#: ../../chapters/wrapper.rst:88
# ce3880784eb940e8b8a6b298a20d5464
msgid "Use **QGIS SQL where clause** when adding a PostGIS layer:"
msgstr ""

#: ../../chapters/wrapper.rst:75
# 4fece9d9ca6e4258974955de0174fb4d
msgid "Create a database connection and add the “ways” table as a background layer."
msgstr ""

#: ../../chapters/wrapper.rst:76
# 57ea2e3efa1646789719ab8da3551cea
msgid "Add another layer of the “ways” table but select ``Build query`` before adding it."
msgstr ""

#: ../../chapters/wrapper.rst:77
# 4f72d944fb8748eea431301e772c0d37
msgid "Then type the following into the  **SQL where clause** field:"
msgstr ""

#: ../../chapters/wrapper.rst:90
# cca2203e41d446ed9216cf9f900c682c
msgid "See the next chapter how to configure a WMS server with Geoserver."
msgstr ""

#: ../../chapters/wrapper.rst:94
# 2c76f3400f7545678ef2db695b49f4b3
msgid "Simplified input parameters and geometry output"
msgstr ""

#: ../../chapters/wrapper.rst:96
# 8ad5d7cb60d54b25aa4f98759b915928
msgid "The following function simplifies (and sets default values) when it calls the shortest path Dijkstra function."
msgstr ""

#: ../../chapters/wrapper.rst:100
# a1c96909a7d046b680e01f5a7ff7d06e
msgid "The name of the new function must not match any existing function with the same input argument types in the same schema. However, functions of different argument types can share a name (this is called overloading)."
msgstr ""

#: ../../chapters/wrapper.rst:103
# 8731bf4e11d24a54b9ef1d44cbc991f1
msgid "Dijkstra Wrapper"
msgstr ""

#: ../../chapters/wrapper.rst:144
#: ../../chapters/wrapper.rst:188
# 79ff0eead01d45709aef922bac7f7911
# 33f070df083a44fe96da83935d81f681
msgid "Example query"
msgstr ""

#: ../../chapters/wrapper.rst:151
# bbb7f2d34548412780809d99e5493610
msgid "Route between lat/lon points and return ordered geometry with heading"
msgstr ""

#: ../../chapters/wrapper.rst:153
# 9f6b18c7c55f4b2eb55e773cea230f98
msgid "The following function takes lat/lon points as input parameters and returns a route that can be displayed in QGIS or WMS services such as Mapserver and Geoserver:"
msgstr ""

#: ../../chapters/wrapper.rst:156
# ba8510d806d846fe9affe46ba229def6
msgid "Input parameters"
msgstr ""

#: ../../chapters/wrapper.rst:157
# c22e3637d95343fb93b1474c3bace33d
msgid "Table name"
msgstr ""

#: ../../chapters/wrapper.rst:158
# cdc8cdec2a0f41beb98a331880205c94
msgid "``x1``, ``y1`` for start point and ``x2``, ``y2`` for end point"
msgstr ""

#: ../../chapters/wrapper.rst:161
# 98f548f4ae464affb55b9fcbb50a54c6
msgid "Output columns"
msgstr ""

#: ../../chapters/wrapper.rst:162
# 913aafa1b87c4a8a8dc35d1c005ff8ef
msgid "Sequence (for example to order the results afterwards)"
msgstr ""

#: ../../chapters/wrapper.rst:163
# 117a8882482c48cab9cc651e4a049401
msgid "Gid (for example to link the result back to the original table)"
msgstr ""

#: ../../chapters/wrapper.rst:164
# 23c28bb4d4c94c7aa27ed1f95acd99b4
msgid "Street name"
msgstr ""

#: ../../chapters/wrapper.rst:165
# d1440e11c013417d986f38db877dec91
msgid "Heading in degree (simplified as it calculates the Azimuth between start and end node of a link)"
msgstr ""

#: ../../chapters/wrapper.rst:166
# 675b060dbcf447208918e476aaddc539
msgid "Costs as length in kilometer"
msgstr ""

#: ../../chapters/wrapper.rst:167
# c2cb3bb482a647b59ea30bbd4c477d54
msgid "The road link geometry"
msgstr ""

#: ../../chapters/wrapper.rst:169
# 1c72c16e20854dba934b0434cc033234
msgid "What the function does internally:"
msgstr ""

#: ../../chapters/wrapper.rst:171
# 8f2fd636ce4142f684e80c25fc20f55a
msgid "Finds the nearest nodes to start and end point coordinates"
msgstr ""

#: ../../chapters/wrapper.rst:172
# 66ae5d288e514404b6fe6a5f5a3b4926
msgid "Runs shortest path Dijkstra query"
msgstr ""

#: ../../chapters/wrapper.rst:173
# d1ac6c2a5a1e4eb38f85fda31b4275a8
msgid "Flips the geometry if necessary, that target node of the previous road link is the source of the following road link"
msgstr ""

#: ../../chapters/wrapper.rst:174
# 09156db170594f4dbaf2f0271ba08cf4
msgid "Calculates the azimuth from start to end node of each road link"
msgstr ""

#: ../../chapters/wrapper.rst:175
# d72d51935e4249cdb2cf4693ac98404b
msgid "Returns the result as a set of records"
msgstr ""

#: ../../chapters/wrapper.rst:180
# 966b013cebac4e71a9aa8f722e24e688
msgid "What the function does not do:"
msgstr ""

#: ../../chapters/wrapper.rst:182
# 693a45a41fc64c49a2b3108b3497644f
msgid "It does not restrict the selected road network by BBOX (necessary for large networks)"
msgstr ""

#: ../../chapters/wrapper.rst:183
# 1f220caa37be40ec81a98aa1571b30a0
msgid "It does not return road classes and several other attributes"
msgstr ""

#: ../../chapters/wrapper.rst:184
# aa605bfe12c9498dab32a65a8d95be61
msgid "It does not take into account one-way streets"
msgstr ""

#: ../../chapters/wrapper.rst:185
# e518c215bf8945b89fd458dcfe9d6d76
msgid "There is no error handling"
msgstr ""

#: ../../chapters/wrapper.rst:193
# c57aae856b934e7d88a5d2afa5bbd319
msgid "To store the query result as a table run"
msgstr ""

#: ../../chapters/wrapper.rst:201
# 3f9d25df1905484bbad2d7f59c716ed3
msgid "We can now install this function into the database:"
msgstr ""

