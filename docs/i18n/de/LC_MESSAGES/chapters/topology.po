# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2014 Daniel Kastl, Frédéric Junod
# This file is distributed under the same license as the Workshop - FOSS4G routing with pgRouting package.
# 
# Translators:
# Ettore Atalan <atalanttore@googlemail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: Workshop\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-10 09:37+0900\n"
"PO-Revision-Date: 2014-11-10 13:45+0000\n"
"Last-Translator: Ettore Atalan <atalanttore@googlemail.com>\n"
"Language-Team: German (http://www.transifex.com/projects/p/pgrouting-workshop/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 4251264c3267476aa90d127f838a2f11
#: ../../chapters/topology.rst:13
msgid "Create a Network Topology"
msgstr ""

# 52aa335baaf145eb942117c39b0e54b9
#: ../../chapters/topology.rst:15
msgid ""
":doc:`osm2pgrouting <osm2pgrouting>` is a convenient tool, but it's also a "
"*black box*. There are several cases where :doc:`osm2pgrouting "
"<osm2pgrouting>` can't be used. Obviously if the data isn't OpenStreetMap "
"data. Some network data already comes with a network topology that can be "
"used with pgRouting out-of-the-box. Often network data is stored in Shape "
"file format (``.shp``) and we can use PostGIS' ``shape2postgresql`` "
"converter to import the data into a PostgreSQL database. But what to do "
"then?"
msgstr ""

# 975ad174f9a14c2aadd2248fd4a2877e
#: ../../chapters/topology.rst:21
msgid ""
"In this chapter you will learn how to create a network topology from "
"scratch. For that we will start with data that contains the minimum "
"attributes needed for routing and show how to proceed step-by-step to build "
"routable data for pgRouting."
msgstr ""

# dc6f487ad54f4b80a20c46ad0d245e9f
#: ../../chapters/topology.rst:25
msgid "Load network data"
msgstr "Netzwerkdaten laden"

# 89a70fec587249e89cb79afc904487e9
#: ../../chapters/topology.rst:27
msgid ""
"At first we will load a database dump from the workshop ``data`` directory. "
"This directory contains a compressed file with database dumps as well as a "
"small size network data. If you haven't uncompressed the data yet, extract "
"the file by"
msgstr ""

# e7a639afef434c0b8f7332aa5ddbd1c4
#: ../../chapters/topology.rst:34
msgid ""
"The following command will import the database dump. It will add PostGIS and"
" pgRouting functions to a database, in the same way as decribed in the "
"previous chapter. It will also load the sample data with a minimum number of"
" attributes, which you will usually find in any network data:"
msgstr ""

# ed424f5e0c4841e6b10705f772f15c2f
#: ../../chapters/topology.rst:44
msgid "Let's see wich tables have been created:"
msgstr ""

# 9ec74d38474e4fe88f1fcdee640269f6
#: ../../chapters/topology.rst:47
msgid "Run: ``psql -U user -d pgrouting-workshop -c \"\\d\"``"
msgstr ""

# 88d9809da2b44cd2813fd9081da9297f
#: ../../chapters/topology.rst:62
msgid ""
"The table containing the road network data has the name ``ways``. It "
"consists of the following attributes:"
msgstr ""

# 2e8fb1d7bc7c48919d324f5850b6ad93
#: ../../chapters/topology.rst:65
msgid "Run: ``psql -U user -d pgrouting-workshop -c \"\\d ways\"``"
msgstr ""

# 70841bd9f53e46f8b5cc756a334fafdd
#: ../../chapters/topology.rst:82
msgid ""
"It is common that road network data provides at least the following "
"information:"
msgstr ""

# dfce38efadbb475e9b4a4c5c6fbaa8e3
#: ../../chapters/topology.rst:84
msgid "Road link ID (gid)"
msgstr ""

# ac7ff01bd23c4dc4a5497aa1989f0101
#: ../../chapters/topology.rst:85
msgid "Road class (class_id)"
msgstr ""

# f69b9ff3d00d408cb9b7c80094000b25
#: ../../chapters/topology.rst:86
msgid "Road link length (length)"
msgstr ""

# d7ce9addaadb4078bfde93ba4c11f621
#: ../../chapters/topology.rst:87
msgid "Road name (name)"
msgstr "Straßenname (name)"

# 1f7b036fc5194c588db4e27605a8c8ca
#: ../../chapters/topology.rst:88
msgid "Road geometry (the_geom)"
msgstr ""

# 7dc96ff19e594206a5c8065907d0b9e9
#: ../../chapters/topology.rst:90
msgid ""
"This allows to display the road network as a PostGIS layer in GIS software, "
"for example in QGIS. Though it is not sufficient for routing, because it "
"doesn't contain network topology information."
msgstr ""

# 90f3a66a5dc541fbb9fa37d559f4c014
#: ../../chapters/topology.rst:92
msgid "For the next steps we need to start the PostgreSQL command line tool"
msgstr ""

# bc1b5aa6f0f74b59b59fe3a2d97f4e52
#: ../../chapters/topology.rst:98
msgid "... or use PgAdmin III."
msgstr ""

# be8960ec4d5144f580af9f82669b7b97
#: ../../chapters/topology.rst:102
msgid "Calculate topology"
msgstr ""

# aa39571f792c4be7985dfa0ffc904c01
#: ../../chapters/topology.rst:104
msgid ""
"Having your data imported into a PostgreSQL database usually requires one "
"more step for pgRouting. You have to make sure that your data provides a "
"correct network topology, which consists of information about source and "
"target ID of each road link."
msgstr ""

# f0b15897613c4e98839349fb95b49900
#: ../../chapters/topology.rst:106
msgid ""
"If your network data doesn't have such network topology information already "
"you need to run the ``pgr_createTopology`` function. This function assigns a"
" ``source`` and a ``target`` ID to each link and it can \"snap\" nearby "
"vertices within a certain tolerance."
msgstr ""

# f0615c7d5f6b4c94a7ea0161179fc24a
#: ../../chapters/topology.rst:112
msgid ""
"First we have to add source and target column, then we run the "
"``pgr_createTopology`` function ... and wait. Depending on the network size "
"this process may take from minutes to hours. It will also require enough "
"memory (RAM or SWAP partition) to store temporary data."
msgstr ""

# 41a550d6982549b3ba1f8a7283e22734
#: ../../chapters/topology.rst:125
msgid ""
"Execute ``psql -U user -d pgrouting-workshop`` in your terminal to connect "
"to the database and start the PostgreSQL shell. Leave the shell with ``\\q``"
" command."
msgstr ""

# 80228eba3c574766b6e72af6060d0d3f
#: ../../chapters/topology.rst:129
msgid ""
"The dimension of the tolerance parameter depends on your data projection. "
"Usually it's either \"degrees\" or \"meters\"."
msgstr ""

# b1721133a69b4699bd87a51aae9f8213
#: ../../chapters/topology.rst:133
msgid "Add indices"
msgstr ""

# a68e5aa681d443ae9eff5040569ee460
#: ../../chapters/topology.rst:135
msgid ""
"Make sure that your network table has an index for ``source`` and ``target``"
" columns."
msgstr ""

# 82814e05164048f8a869ecd6e60568b8
#: ../../chapters/topology.rst:142
msgid "After these steps our routing database looks like this:"
msgstr ""

# 0e799eaca6ba4237b6deadde5ad99aa8
#: ../../chapters/topology.rst:145
msgid "Run: ``\\d``"
msgstr "Ausführen: ``\\d``"

# 30b4800c712b4e099437b371cf728ebe
#: ../../chapters/topology.rst:161
msgid ""
"``geography_columns`` should contain a record for each table with "
"\"geometry\" attribute and its SRID."
msgstr ""

# bee3711932984b12a654a8a82ae7a14a
#: ../../chapters/topology.rst:162
msgid "``ways_vertices_pgr`` contains a list of all network nodes."
msgstr ""

# c6c5acbdebd243d78d171effe9be2927
#: ../../chapters/topology.rst:166
msgid "Run: ``\\d ways``"
msgstr ""

# 0ec00d1268dd408fb437d99cb7b13704
#: ../../chapters/topology.rst:186
msgid "``source`` and ``target`` columns are now updated with node IDs."
msgstr ""

# 3e85b7721fb74171b87d09c7aa50d4d0
#: ../../chapters/topology.rst:187
msgid "``name`` may contain the street name or be empty."
msgstr ""

# 6cab69e508204bc99f8712c52900886b
#: ../../chapters/topology.rst:188
msgid "``length`` is the road link length in kilometers."
msgstr ""

# bff6408f2d594e5d97f70d8021deb9f0
#: ../../chapters/topology.rst:190
msgid ""
"Now we are ready for our first routing query with :doc:`Dijkstra algorithm "
"<shortest_path>`!"
msgstr ""
